name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  publish:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: false

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true

          - os: macos-15
            target: x86_64-apple-darwin
            use-cross: false

          - os: macos-15
            target: aarch64-apple-darwin
            use-cross: false

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable
          rustup target add ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.use-cross == true
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: |
          if [[ "${{ matrix.use-cross }}" == "true" ]]; then
            cross build --target ${{ matrix.target }} --release --locked
          else
            cargo build --target ${{ matrix.target }} --release --locked
          fi
        shell: bash

      - name: Set binary path
        id: binary
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "path=target/${{ matrix.target }}/release/ht.exe" >> $GITHUB_OUTPUT
            echo "name=ht-${{ matrix.target }}.exe" >> $GITHUB_OUTPUT
          else
            echo "path=target/${{ matrix.target }}/release/ht" >> $GITHUB_OUTPUT
            echo "name=ht-${{ matrix.target }}" >> $GITHUB_OUTPUT
          fi

      - name: Upload binaries to the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.binary.outputs.path }}
          asset_name: ${{ steps.binary.outputs.name }}
          tag: ${{ github.ref }}
